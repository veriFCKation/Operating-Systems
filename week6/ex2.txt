Same input for both algorithms:
7 processes: (0,1), (0,1), (0,1), (7, 1), (3,3), (3, 1), (3, 2)

Output of FIFS algorithm:
Process 0 (0, 1):
    CT  = 0
    TAT = 1
    WT  = 0
Process 1 (0, 1):
    CT  = 1
    TAT = 2
    WT  = 1
Process 2 (0, 1):
    CT  = 2
    TAT = 3
    WT  = 2
Process 3 (7, 1):
    CT  = 0
    TAT = 1
    WT  = 0
Process 4 (3, 3):
    CT  = 5
    TAT = 8
    WT  = 5
Process 5 (3, 1):
    CT  = 8
    TAT = 9
    WT  = 8
Process 6 (3, 2):
    CT  = 9
    TAT = 11
    WT  = 9
Average TAT = 5.000000
Average WT  = 3.571429

Output of SJF algorithm:
Process 0 (0, 1):
    CT  = 0
    TAT = 1
    WT  = 0
Process 1 (0, 1):
    CT  = 1
    TAT = 2
    WT  = 1
Process 2 (0, 1):
    CT  = 2
    TAT = 3
    WT  = 2
Process 3 (3, 1):
    CT  = 0
    TAT = 1
    WT  = 0
Process 4 (3, 2):
    CT  = 1
    TAT = 3
    WT  = 1
Process 5 (3, 3):
    CT  = 3
    TAT = 6
    WT  = 3
Process 6 (7, 1):
    CT  = 2
    TAT = 3
    WT  = 2
Average TAT = 2.714286
Average WT  = 1.285714

Note, that average TAT and WT are less in case of SJF algorithm. It's because the FIFS algorithm has periods of useless standing (like betveen (0,1) and (7, 1) processes) and not optimazed order of execution (like in case of (3, 3) and (3,1) processes).
